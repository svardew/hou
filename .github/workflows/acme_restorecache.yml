name: FIXME actions/cache/restore
on:
  workflow_dispatch:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  wip:
    runs-on: ubuntu-22.04 # fix version, not latest
    permissions:
      actions: write
      contents: write
    env:
      CACHEDIR: debcache
    steps:
      - name: Checkout repository from github
        uses: actions/checkout@v4
        if: false
        with:
          repository: ${{ github.repository_owner }}/vim
          path: vim
      - name: Checkout repository from github
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/hou
          path: _svardew_hou
      - name: init
        shell: bash {0}
        run: |
          gh extension install actions/gh-actions-cache
          test -d ${{ env.CACHEDIR }} || mkdir ${{ env.CACHEDIR }}
          sudo touch /etc/apt/apt.conf.d/99githubworkflows
          echo 'Binary::apt::APT::Cache "/var/cache/apt";' | sudo tee -a /etc/apt/apt.conf.d/99githubworkflows
          echo 'Binary::apt::APT::Cache::Archives "archives";' | sudo tee -a /etc/apt/apt.conf.d/99githubworkflows
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Uninstall snap. Omit microsoft-prod
        if: false
        run: |
          sudo bash ./vim/ci/remove_snap.sh
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
      - name: WIP cwd
        if: false
        # docs.github.com/ja/rest/actions/cache?apiVersion=2022-11-28
        run: |
          ls -lah .
          echo '/** contexts */'
          echo ${{ env.CACHEDIR }}
          echo ${{ runner.os }}-debfiles
          gh api -H "${{ env.hdr1 }}" -H "${{ env.hdr2 }}" ${{ env.rest }} | jq '.'
        env:
          hdr1: 'Accept: application/vnd.github+json'
          hdr2: 'X-GitHub-Api-Version: 2022-11-28'
          rest: '/repos/svardew/hou/actions/caches?per_page=100'
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Restore cache
        if: false
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHEDIR }}
          key: ${{ runner.os }}-debfiles
      - name: check gh-actions-cache output format
        run: |
          echo '/** show cache list filter by key=linux-deb-system */'
          gh actions-cache list -R $REPO --key ${{ env.KEY1 }}
          echo '/** show cache list filter by key=NotExistKey */'
          gh actions-cache list -R $REPO --key ${{ env.KEY2 }}
          echo '/** show return val from filter by key=NotExistKey */'
          echo '---'"$(gh actions-cache list -R $REPO --key ${{ env.KEY2 }})"'---'
          echo '---'"__gh actions-cache list -R _REPO --key ___ env.KEY2 ___"'---'
        env:
          REPO: ${{ github.repository }}
          KEY1: linux-deb-system
          KEY2: not-exist-keystring
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: noop
        run: whoami
