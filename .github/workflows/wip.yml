name: Check dependeicies cache daily

on:
  # schedule:
    # - cron: '24 15 * * *'  # Run once per day.
  workflow_dispatch:
    inputs:
      name: checksum
      desription: 'MD5SUMS csv one line'
      required: true
      default: '9851c10632b2d9bbb261441be628d9b1  lisbn-0.3.1.tar.gz,8c061237261a00c307c82dd3880f19c1  lisbn-0.3.1.zip'

permissions:
  contents: read # to fetch code (actions/checkout)
  actions: write # gh extension (actions/gh-actions-cache) delete cache

jobs:
  windows:
    runs-on: ubuntu-22.04

    env:
      LUA_RELEASE: '5.4.2'
      WINPTY_URL: https://github.com/rprichard/winpty/releases/download/0.4.3/winpty-0.4.3-msvc2015.zip
      SODIUM_VER: '1.0.19'
      # test urls
      LISBN_ZIP_URL: https://github.com/svardew/lisbn/archive/refs/tags/v0.3.1.zip
      LISBN_TAR_URL: https://github.com/svardew/lisbn/archive/refs/tags/v0.3.1.tar.gz
      LISBN_ZIP_SAVEAS: lisbn-v0.3.1.zip
      LISBN_TAR_SAVEAS: lisbn-v0.3.1.tar.gz
      REPO_VIM: svardew/vim
      OS: Windows

    steps:
      - uses: actions/checkout@v4
        with:
          path: vim
          repository: ${{ env.REPO_VIM }}

      - name: Set up environment
        run: |
          test -d downloads || mkdir downloads
          touch urls.txt && truncate --size 0 urls.txt
          gh extension install actions/gh-actions-cache
          # checksum
          checksum=MD5SUMS-${{ env.arc }}
          touch $checksum
          echo -n ${{ env.MD5SUMS_CSV }} > $checksum
          sed -i 's/,/\n/g' > ./$checksum
        env:
          arc: any
          GH_TOKEN: ${{ github.token }}
          MD5SUMS_CSV: ${{ inputs.checksum }}

      - name: Create Keyfile
        run: |
          echo ${{ env.LUA_RELEASE }} > urls.txt
          echo ${{ env.WINPTY_URL }} >> urls.txt
          echo ${{ env.SODIUM_VER }} >> urls.txt
          sed -i 's/$/\r/g' urls.txt

      - name: Restore Cache
        uses: actions/cache/restore@v4
        with:
          enableCrossOsArchive: true
          path: downloads
          key: ${{ env.OS }}-${{ env.arc }}-${{ hashFiles('urls.txt') }}
        env:
          arc: any
          REPO: ${{ github.repository }}

      - name: Verify cache
        id: verifycache
        continue-on-error: true
        shell: bash {0}
        run: |
          cachedir=cache-${{ env.arc }}
          checksum=MD5SUMS-${{ env.arc }}
          test -d $cachedir  && rm -rf $cachedir
          test -d $cachedir  || mkdir $cachedir
          find downloads -type f -exec cp \{\} $cachedir
          cd $cachedir
          md5sum -c ../$checksum
          if [ $? -gt 0 ]; then
            echo "cache=invalid" >> $GITHUB_OUTPUT
          else
            echo "cache=valid" >> $GITHUB_OUTPUT
          fi
        env:
          arc: any

      - name: Use current cache
        if: steps.verifycache.outputs.cache == 'valid'
        run: |
          echo "repository cache is fine."
          echo "KEY: ${{ env.OS }}-${{ env.arc }}-${{ hashFiles('urls.txt') }}"
        env:
          arc: any

      - name: Delete repository cache
        if: steps.verifycache.outputs.cache == 'invalid'
        run: |
          echo "repository cache is not fine."
          echo "KEY: ${{ env.OS }}-${{ env.arc }}-${{ hashFiles('urls.txt') }}"
          echo "regenerate cache. first, delete cache"
          caches=$(gh actions-cache list -R ${{ env.REPO }} | cut -f1)
          restorekey=${{ env.OS }}-${{ env.arc }}-${{ hashFiles('urls.txt') }}
          for ky in $caches
          do
            if [ "$ky" = "$restorekey" ]; then
              echo "* delete repository cache:" $restorekey
              gh actions-cache delete $restorekey -R ${{ env.REPO }} --confirm
            fi
          done
        env:
          arc: any
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}

      - name: Download missing dependencies
        if: steps.verifycache.outputs.cache == 'invalid'
        run: |
          echo "regenerate cache. next, download dependencies."
          cachedir=cache-${{ env.arc }}
          checksum=MD5SUMS-${{ env.arc }}
          function dlf2 () {
            if [ ! -f "$2" ]
            then wget -nv --tries=2 --waitretry=10 -O $2 $1
            else echo Skip Downlaod. $2
            fi
          }
          cd $cachedir
          dlf2 ${{ env.LISBN_ZIP_URL }} ${{ env.LISBN_ZIP_SAVEAS }}
          dlf2 ${{ env.LISBN_TAR_URL }} ${{ env.LISBN_TAR_SAVEAS }}
          echo '// check md5sum'
          md5sum -c ../$checksum
          find $cachedir -type f -exec cp -vn \{\} ./downloads/ \;
        env:
          arc: any

      - name: Save cache
        if: steps.verifycache.outputs.cache == 'invalid'
        uses: actions/cache/save@v4
        with:
          path: downloads
          enableCrossOsArchive: true
          key: ${{ env.OS }}-${{ env.arc }}-${{ hashFiles('urls.txt') }}
        env:
          arc: any
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}


