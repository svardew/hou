name: "composie action. check and verify cache."
#name:"compoiste action. delete and save cache."
description: "Check cache"

inputs:
  architecture:
    default: all
    required: false
  md5sums:
    # multiline string
    required: true
  keyfile:
    default: 'urls.txt'
    required: false
env:
  WINPTY_URL: https://github.com/rprichard/winpty/releases/download/0.4.3/winpty-0.4.3-msvc2015.zip

runs:
  using: "composite"

  # runs-on: ubuntu-latest
  steps:
    - name: init
      run: |
        touch urls.txt && truncate --size 0 urls.txt
        echo '5.4.2' >> urls.txt
        echo ${{ env.WINPTY_URL }} >> urls.txt
        echo  '1.0.19' >> urls.txt
        sed -i 's/$/\r/g' urls.txt

    - name: Restore cache /${{ env.arc }}
      uses: actions/cache/restore@v4
        with:
          enableCrossOsArchive: true
          path: downloads
          # key: ${{ env.os }}-${{ env.arc }}-${{ hashFiles('urls.txt') }}
          key: ${{ env.os }}-${{ env.arc }}-${{ env.key }}
        env:
          arc: ${{ inputs.architecture }}
          os: Windows
          keyfile: ${{ inputs.keyfile }}
          key: ${{ hashFiles('urls.txt') }}
          REPO: ${{ github.repository }}

    - name: Verify cache /${{ env.arc }}
      id: verifycache
      continue-on-error: true
      shell: bash {0}
      run: |
        test -d cache-${{ env.arc }} && rm -rf cache-${{ env.arc }}
        test -d cache-${{ env.arc }} || mkdir cache-${{ env.arc }}
        find downloads -type f -exec cp \{\} ./cache-${{ env.arc }} \;
        echo "${{ inputs.md5sums }}" > MD5SUMS-${{ env.arc }}
        cd ./cache-${{ env.arc }}
        md5sum -c ../MD5SUMS-${{ env.arc }}
        if [ $? -gt 0 ]; then
          echo "cache=invalid" >> $GITHUB_OUTPUT
        else
          echo "cache=valid" >> $GITHUB_OUTPUT
        fi
        echo "### VerifyCache :rocket:" >> $GITHUB_STEP_SUMMARY
      env:
        arc: ${{ inputs.architecture }}
        os: Windows
        keyfile: ${{ inputs.keyfile }}
        REPO: ${{ github.repository }}

    - name: show result /${{ env.arc }}
      run: |
        echo 'cache status:' ${{ steps.verifycache.outputs.cache }}

    - name: ${{ env.arc }} / Use current cache
      if: steps.verifycache.outputs.cache == 'valid'
      run: |
        echo "repository cache is fine."
        echo "KEY: ${{ env.os }}-${{ env.arc }}-${{ hashFiles($keyfile) }}"
        echo "### NotUpdateCache :rocket:" >> $GITHUB_STEP_SUMMARY
      env:
        arc: ${{ inputs.architecture }}
        os: Windows
        keyfile: ${{ inputs.keyfile }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: ${{ github.repository }}

    - name: ${{ env.arc }} / todo Download missing dependencies
      if: steps.verifycache.outputs.cache == 'invalid'
      run: |
        echo "repository cache is bad."
        echo "KEY: ${{ env.os }}-${{ env.arc }}-${{ hashFiles($keyfile) }}"
        echo "### TodoUpdateCache :rocket:" >> $GITHUB_STEP_SUMMARY
      env:
        arc: ${{ inputs.architecture }}
        os: Windows
        keyfile: ${{ inputs.keyfile }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: ${{ github.repository }}

