name: "composie action. check and verify cache."
description: "Check cache"
inputs:
  restorekey:
    required: true
  architecture:
    default: 'all'
    required: false
runs:
  using: "composite" # caller os is ubuntu-xxx

  steps:
    - name: Restore cache
      uses: actions/cache/restore@v4
      with:
        enableCrossOsArchive: true
        path: downloads
        key: ${{ inputs.restorekey }}

    - name: Verify cache
      continue-on-error: true
      shell: bash {0}
      run: |
        cachedir=cache-${{ inputs.architecture }}
        test -d $cachedir && rm -rf $cachedir
        test -d $cachedir || mkdir $cachedir
        find downloads -type f -exec cp \{\} ./$cachedir \;
        cd ./$cachedir
        md5sum -c ../MD5SUMS-${{ inputs.architecture }}
        if [ $? -gt 0 ]; then
          echo "cache=invalid" >> $GITHUB_OUTPUT
          echo "### VerifyCache :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "cache=invalid" >> $GITHUB_STEP_SUMMARY
        else
          echo "cache=valid" >> $GITHUB_OUTPUT
          echo "### VerifyCache :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "cache=valid" >> $GITHUB_STEP_SUMMARY
        fi
#--     - name: show result /${{ env.arc }}
#--       shell: bash
#--       run: |
#--         echo 'cache status:' ${{ steps.verifycache.outputs.cache }}
#--     - name: ${{ env.arc }} / Use current cache
#--       if: steps.verifycache.outputs.cache == 'valid'
#--       shell: bash
#--       run: |
#--         echo "repository cache is fine."
#--         echo "KEY: ${{ env.os }}-${{ env.arc }}-${{ hashFiles($keyfile) }}"
#--         echo "### NotUpdateCache :rocket:" >> $GITHUB_STEP_SUMMARY
#--       env:
#--         arc: ${{ inputs.architecture }}
#--         os: Windows
#--         keyfile: ${{ inputs.keyfile }}
#--         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#--         REPO: ${{ github.repository }}
#--     - name: ${{ env.arc }} / todo Download missing dependencies
#--       if: steps.verifycache.outputs.cache == 'invalid'
#--       shell: bash
#--       run: |
#--         echo "repository cache is bad."
#--         echo "KEY: ${{ env.os }}-${{ env.arc }}-${{ hashFiles($keyfile) }}"
#--         echo "### TodoUpdateCache :rocket:" >> $GITHUB_STEP_SUMMARY
#--       env:
#--         arc: ${{ inputs.architecture }}
#--         os: Windows
#--         keyfile: ${{ inputs.keyfile }}
#--         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#--         REPO: ${{ github.repository }}
#--         ky: ${{ hashFiles('urls.txt') }}
#--         key: ${{ hashFiles(${{ inputs.keyfile }}) }}

